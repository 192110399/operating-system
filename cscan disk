#include<stdio.h>
#include<stdlib.h>

#define SIZE 8

void c_scan(int arr[], int head, int size) {
    int distance = 0;
    int current = head;
    int seek_sequence[size + 1];

    // Sort the array of disk locations
    qsort(arr, size, sizeof(int), compare);

    // Find index of head in the sorted array
    int index;
    for (index = 0; index < size; ++index) {
        if (arr[index] >= head)
            break;
    }

    int left = index - 1;  // Left side of head in the sorted array
    int right = index;     // Right side of head in the sorted array

    int j = 0;
    // Scan right
    for (int i = right; i < size; ++i) {
        seek_sequence[j++] = arr[i];
    }
    // Scan left
    for (int i = 0; i < left; ++i) {
        seek_sequence[j++] = arr[i];
    }

    seek_sequence[j] = head;

    printf("C-SCAN Disk Scheduling Algorithm:\n");
    printf("Sequence of disk location visited:\n");

    for (int i = 0; i <= size; ++i) {
        printf("%d ", seek_sequence[i]);
        distance += abs(seek_sequence[i] - current);
        current = seek_sequence[i];
    }

    printf("\nTotal disk head movement: %d\n", distance);
}

int compare(const void *a, const void *b) {
    return ((int)a - (int)b);
}

int main() {
    int disk_queue[SIZE] = {98, 183, 37, 122, 14, 124, 65, 67};
    int head = 53;

    c_scan(disk_queue, head, SIZE);

    return 0;
}
